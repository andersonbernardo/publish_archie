
function inputErrors(stringError) {

    //Clean previous errors
    var divErrorSelector = $("div.feedback.error");
    divErrorSelector.remove();
    var genericFeedback = '<p>Confira se os dados do cartão foram inseridos corretamente e faça uma nova tentativa.</p>';
    var divError = $('<div id="card_error" class="feedback error">' +
        '<h3>Ops! Algo deu errado com seu pagamento.</h3>' + (stringError == '' ? genericFeedback : stringError) + '</div>');

    divError.insertAfter("article.cadastro.step-03 h2");

    $('html, body').animate({ scrollTop: $('#card_error').offset().top }, 600);

}

function generateCreditCardHash($form) {

    PagarMe.encryption_key = pK;

    $form.submit(function (event) {
        // quando o form for enviado...
        // inicializa um objeto de cartão de crédito e completa
        // com os dados do form
        var creditCard = new PagarMe.creditCard();
        creditCard.cardHolderName = $("#payment-form #cc-nome").val();
        creditCard.cardNumber = $("#payment-form #cc-numero").val();
        creditCard.cardExpirationMonth = $("#payment-form #cc-validade-mes").val();
        creditCard.cardExpirationYear = $("#payment-form #cc-validade-ano").val();
        creditCard.cardCVV = $("#payment-form #cc-cvv").val();
        var splitValue = $("#cc-parcelas").val();

        var date = new Date();
        var currentMonth = date.getMonth() + 1;
        var currentYear = date.getFullYear();

        var stringError = "";
        var hasErrors = false;

        if ((currentYear == creditCard.cardExpirationYear && currentMonth > parseInt(creditCard.cardExpirationMonth)) || currentYear > parseInt(creditCard.cardExpirationYear)) {
            stringError += '<p>Data de expiração inválida.</p>';
            hasErrors = true;
        }
        // pega os erros de validação nos campos do form
        var fieldErrors = creditCard.fieldErrors();
        //Verifica se há erros        
        for (var field in fieldErrors) { hasErrors = true; break; }

        if (hasErrors || isNaN(eval(splitValue))) {

            if (fieldErrors.card_number != undefined)
                stringError += '<p>' + decodeURIComponent(escape(fieldErrors.card_number)) + '</p>';
            if (fieldErrors.card_holder_name != undefined)
                stringError += '<p>' + decodeURIComponent(escape(fieldErrors.card_holder_name)) + '</p>';
            if (fieldErrors.card_cvv != undefined)
                stringError += '<p>' + decodeURIComponent(escape(fieldErrors.card_cvv)) + '</p>';

            inputErrors(stringError);
        } else {
            // se não há erros, gera o card_hash...
            creditCard.generateHash(function (cardHash) {

                // ...coloca-o no form...
                $form.trigger('reset');
                $form.append($('<input type="hidden" name="ccCardHash">').val(cardHash + ":archie:" + splitValue));
                $form.append($('<input type="hidden" name="ccSplitPayment">').val());
                // e envia o form
                $form.get(0).submit();
            });
        }

        return false;
    });
}

